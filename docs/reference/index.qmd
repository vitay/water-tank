# API reference

## **Layers**

Layers available for inputs, reservoirs, readouts, etc.

The objects must be explicitly imported:

```python
import water_tank as wt

rc = wt.layers.RecurrentLayer(size=200, tau=3.0)
```


| | |
| --- | --- |
| [RecurrentLayer](RecurrentLayer.qmd#water_tank.layers.RecurrentLayer.RecurrentLayer) | Reservoir of recurrently connected neurons. |
| [MiconiLayer](MiconiLayer.qmd#water_tank.layers.MiconiLayer.MiconiLayer) | Reservoir of recurrently connected neurons, with perturbations and sliding mean. |
| [LinearReadout](LinearReadout.qmd#water_tank.layers.LinearReadout.LinearReadout) | Linear readout layer. Performs a weighted sum of its inputs, without dynamics. |
| [StaticInput](StaticInput.qmd#water_tank.layers.StaticInput.StaticInput) | Static placeholder for input vectors. |
| [TimeSeriesInput](TimeSeriesInput.qmd#water_tank.layers.TimeSeriesInput.TimeSeriesInput) | Dynamic placeholder for series of input vectors. |

## **Projections**

Connecting layers with each other.

| | |
| --- | --- |
| [connect](connect.qmd#water_tank.connect) | Connects two layers with a (sparse) weight matrix and optionally a bias vector.  |

## **Learning rules**

Learning rules for online training of a projection.


The objects must be explicitly imported:

```python
import water_tank as wt

lr = wt.rules.RLS(projection=esn_rc, delta=1e-6)
```


| | |
| --- | --- |
| [DeltaLearningRule](DeltaLearningRule.qmd#water_tank.rules.DeltaLearningRule.DeltaLearningRule) | Delta learning rule (online linear regression). |
| [RLS](RLS.qmd#water_tank.rules.RLS.RLS) | Recursive least-squares (RLS) learning rule for FORCE learning. |

## **Random distributions**

Simple wrappers around numpy's random distributions.

The objects must be explicitly imported:

```python
import water_tank as wt

values = wt.random.Uniform.uniform(-1., 1.).sample((10, 10))
```


| | |
| --- | --- |
| [Const](Const.qmd#water_tank.random.Const) | Constant "random" distribution, returning the same value. |
| [Uniform](Uniform.qmd#water_tank.random.Uniform) | Uniform distribution, returning values between `min` and `max`. |
| [Normal](Normal.qmd#water_tank.random.Normal) | Normal distribution, returning values with a mean of `mean` and a standard deviation of `std`. |
| [Bernouilli](Bernouilli.qmd#water_tank.random.Bernouilli) | Bernouilli (binomial) distribution, returning the first of the two values with probability $p$. |

## **Utilities**

Various tools to facilitate simulations.

| | |
| --- | --- |
| [Recorder](Recorder.qmd#water_tank.Recorder) | Data structure to record activities during a simulation. |