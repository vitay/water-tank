# DenseProjection { #water_tank.DenseProjection }

`DenseProjection(self, pre, post, weights, bias=None)`

Dense weight matrix. Created and returned by `connect()`.

## Parameters

| Name      | Type                                                                     | Description                                                                                                     | Default    |
|-----------|--------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------|------------|
| `pre`     | Layer                                                                    | input layer.                                                                                                    | _required_ |
| `post`    | Layer                                                                    | output layer.                                                                                                   | _required_ |
| `weights` | typing.Union\[float, water_tank.RandomDistributions.RandomDistribution\] | float or `RandomDistribution` to create the weight matrix.                                                      | _required_ |
| `bias`    | typing.Union\[float, water_tank.RandomDistributions.RandomDistribution\] | bias per post neuron. If `None` or `False`, no bias is used. Otherwise, can be a float or `RandomDistribution`. | `None`     |

## Methods

| Name | Description |
| --- | --- |
| [input](#water_tank.DenseProjection.input) |  |
| [nb_connections](#water_tank.DenseProjection.nb_connections) |  |
| [step](#water_tank.DenseProjection.step) | Performs a weighted sum of inputs plus bias. |

### input { #water_tank.DenseProjection.input }

`DenseProjection.input(self, idx)`

#### Returns

| Type          | Description                                                 |
|---------------|-------------------------------------------------------------|
| numpy.ndarray | the vector of inputs received by the neuron of index `idx`. |

### nb_connections { #water_tank.DenseProjection.nb_connections }

`DenseProjection.nb_connections(self, idx)`

#### Returns

| Type   | Description                                                  |
|--------|--------------------------------------------------------------|
| int    | the number of weights received by the neuron of index `idx`. |

### step { #water_tank.DenseProjection.step }

`DenseProjection.step(self)`

Performs a weighted sum of inputs plus bias.